public class Passenger {
	
	private String name;
	private int birthYear;
	private double weight;
	private char gender;
	private int numCarryOn;
	private double height;//4.1
	
	public Passenger() {//default constructor
		name = "";
		birthYear = 1900;
		weight = 0.0;
		height = 0.0;//4.1
		gender = 'u';
		numCarryOn = 0;
	}
	
	public Passenger(String name, int birthYear, double weight, double height, char gender, int numCarryOn) {//Overload Constructor
		if(weight < 0) {
			this.weight = -1.0;
		}
		else {
			this.weight = weight;
		}
		if((gender != 'f') || (gender != 'm') || (gender != 'u')) {
			this.gender = 'u';
		}
		if ((gender == 'm') || (gender == 'f')){
			this.gender = gender;
		}
		if(numCarryOn < 0) {
			this.numCarryOn = 0;
		}
		else if(numCarryOn > 2){
			this.numCarryOn = 2;
		}
		else {
			this.numCarryOn = numCarryOn;
		}
		this.name  = name;
		this.birthYear = birthYear;
		if(height < 0) {
			this.height = -1.0;
		}
		else {
			this.height = height;
		}
	}
	
	public int calculateAge(int currentYear) {
		if(currentYear < birthYear) {
			return -1;
		}
		int age = 0;
		age = currentYear - birthYear;
		return age;
	}
	
	public void gainWeight() {
		this.weight = this.weight + 1.0;
	}
	
	public void gainWeight(double amount) {
		if(amount < (weight * -1)) {
			this.weight = 0;
		}
		else {
			this.weight = this.weight + amount;
		}
	}
	
	public int getBirthYear() {
		return this.birthYear;
	}
	
	public char getGender() {
		return this.gender;
	}
	
	public String getName() {
		return this.name;
	}
	
	public double getWeight() {
		return this.weight;
	}
	
	public int getNumCarryOn() {
		return this.numCarryOn;
	}
	
	public double getHeight() {//4.1
		return this.height;
	}
	
	public boolean isFemale() {
		if((gender != 'f')) {
			return false;
		}
		else {
			return true;
		}
	}
	
	public boolean isMale() {
		if((gender != 'm') || (gender != 'M')) {
			return false;
		}
		return true;
	}
	
	public void loseWeight() {
		this.weight = this.weight - 1.0;
		if(this.weight < 0) {
			this.weight = 0;
		}
	}
	
	public void loseWeight(double amount) {
		if((amount > weight)) {
			this.weight = 0;
		}
		if (!(amount > weight)){
			this.weight = this.weight - amount;
		}
	}
	
	public double calculateBMI() {
		double bmi;
		bmi = (weight * 703) / (height * height);
		return bmi;
	}
	
	public void printDetails() {
		System.out.printf("Name: %20s | Year of Birth: %4d | Weight: %10.2f | Height: %10.2f | Gender: %c | NumCarryOn: %2d\n"
				, name, birthYear, weight, height, gender, numCarryOn);
	}
	
	@Override
	public String toString() {
		return String.format("Name: %20s | Year of Birth: %4d | Weight: %10.2f | Height: %10.2f | Gender: %c | NumCarryOn: %2d\n"
				, name, birthYear, weight, height, gender, numCarryOn);
	}
	
	@Override
	public boolean equals(Object obj) {
		if(obj instanceof Passenger) {
			if((birthYear == ((Passenger)obj).birthYear) && (gender == ((Passenger)obj).gender) && (name.equals(((Passenger)obj).name)) 
					&& (Math.abs(height - ((Passenger)obj).height) <= 0.5) && (Math.abs(weight - ((Passenger)obj).weight) <= 0.5)) 
			return true;
			}
			return false;
		}
	
	
	public void setGender(char gender) {
		if((gender != 'm') || (gender != 'f') || (gender != 'u')) {
			this.gender = 'u';
		}
		if(gender == 'm'){
			this.gender = gender;
		}
		//this.gender = gender;
	}
	
	public void setName(String name) {
		this.name = name;
	}
	
	public void setBirthYear(int birthYear) {
		this.birthYear = birthYear;
	}
	
	public void setWeight(double weight) {
		if(weight < 0.0) {
			this.weight = -1;
		}
		else {
			this.weight = weight;
		}
	}
	
	public void setNumCarryOn(int numCarryOn) {
		if(numCarryOn < 0) {
			this.numCarryOn = 0;
		}
		else if(numCarryOn > 2) {
			this.numCarryOn = 2;
		}
		else {
			this.numCarryOn = numCarryOn;
		}
	}
	
	public void setHeight(double height) {//4.1
		if(height < 0.0) {
			this.height = -1;
		}
		else {
			this.height = height;
		}
	}

}
